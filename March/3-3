main函数  库函数
函数头 形式参数
使用函数 即调用函数  函数调用表达式：函数名 实参
函数体被大括号{}括起的复合语句
return语句 
对函数调用表达式进行判定时，会得到该返回类型的返回值
实参，形参名字可相同
函数内声明变量不能与形参同名
值传递（通过值进行参数传递）  灵活运用值传递可以使函数简洁紧凑
没有返回值的函数类型要声明为void
可以将函数返回值作为变量初始值
赋予变量的标识符 名称有一个通用的范围称为作用域   块作用域  文件作用域（从头到尾通用）
函数原型声明，以分号结尾
非定义声明：没有真正创建出变量的实体
一般把main放在最后 把被调用函数放在调用函数前
头文件<stdio.h>，#include指令称为文件包含指令
从通用性考虑，应该可以处理任意数组，不同元素个数的数组
被调用函数中作为形参接收到的数组就是函数调用时被作为实参的数组
const类型修饰符 避免传递给函数的数组内容发生改变
顺序查找
哨兵查找 数组末尾追加的数据称为哨兵，简化对循环结束条件判断
空语句 表达式语句
声明接受多维数组形参时，可以省略第一维元素个数
两个同名变量拥有文件作用域和块作用域，那么只有拥有块作用域的变量是可见的，拥有文件作用域的变量会被隐藏
存储期，变量的生存期   存储类说明符static
自动存储期，不使用static定义出的对象，被赋予了自动存储空间，执行到对象声明时就创建了相应对象，执行到程序块结尾对象消失     编译器赋予不确定的值
静态存储期，使用static定义出的对象，程序执行前准备阶段创建出来，程序结束时消失，‘永久’寿命
register声明，保存在寄存器，现在已基本不使用

int double 算术类型   整数类 浮点型 
枚举型 字符型 整型
10进制，二进制，八进制，十六进制
二进制：偶数末位为0，奇数末位为1       余数逆向排列（除2)
无符号整型，有符号整型
char    short int     int      long int
补码使编译器多表示1个负数
limits.h头文件 
char保存字符型
sizeof运算符，通过使用sizeof可以判断包括char型在内的所有数据类型长度
size_t型，typedef声明定义size_t         typedef unsigned size_t
整型常量数据类型后面的后缀 U L
在int范围内就是int 否则在long范围内就是long 除此之外都是unsigned long
内部表示和位  位：具有大量内存空间的运行环境的数据存储单元 可保存两种取值对象，对象中各二进制位地址不需要表示
二进制补码，最高位（符号位）为0，表示非负数
补码与反码   正数部分位串相同，负数最高位是1
补码表示32个整数，反码表示31个整数
反码：逐位求反  补码：逐位取反后加1
按位与运算符：&运算符
按位或运算符：|运算符
按位异或运算符：^运算符   （两个条件只有1个为真）
~运算符：按位求反运算符
逻辑运算符与按位逻辑运算符
位移运算符 <<  >> 求初左移或右移整数中的位之后的值，这两个运算符统称为位移运算符
a<<b 将a左移b位，右面空出位用0填充
右移（有符号）有可能逻辑位移，有可能算数位移
不对负数做位移
逻辑位移不考虑符号位，所有二进制都做位移
算术位移保留最高位符号，右移1位，值变1/2
printf  八进制用%o  十六进制用%x 或%X   字母大小写
数据溢出会发生异常   无符号整数类型会返回除以1与该数据类型可表示最大值的和之后所得余数
浮点型  float  double  long double
尾数，指数，尾数小数部分决定精度，指数的位数决定长度
浮点型后缀  f或F表示float
循环判断基准所用变量应为整数而不用浮点数
math.h 头文件  sqrt计算平方根
运算
优先级   结合性
整型提升 不改变符号和数值
浮点型与整数类
有符号整型和无符号整型
浮点型
普通算数类型转换（双目运算符）
