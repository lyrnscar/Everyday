二叉搜索树
静态查找/动态查找    动态查找 数据如何组织
二叉搜索树/查找/排序           一棵二叉树 可以为空   非空左子树所有键值小于根结点键值      非空右子树所有键值大于根结点键值    左右子树都是二叉搜索树
特别函数   find      findmin    findmax      insert      delete
find 空返回null  小于去左子树寻找   大于去右子树寻找  递归   相等返回    尾递归（都可以用循环实现）    复杂度较高
查找的效率决定树的高度
最大元素在树最右    最小元素在树最左

插入 关键是找到应该插入的位置  采用find类似方法       
删除 叶节点 直接删除    只有一个孩子结点  拉指针指向其父亲      左右两棵子树 右子树最小元素替代 左子树最大元素替代

平衡二叉树 自然月份序列插入  按字母顺序  按月份字符串     查询效率高
平衡因子  BF  任意结点左右子树高度差     绝对值不超过一
高度越低越好   
nh=nh-1 + nh-2 +1   类似斐波那契数列     1 2 4 7 12 20 33 54 88    nh = fh+2 -1   结点数为n的avl树的最大高度为o（log2n）

平衡二叉树调整
右单旋  调整要保证是搜索树 平衡
麻烦结点RR旋转  RR插入    麻烦结点在发现者右子树右边
麻烦结点在左子树左边 则叫LL插入 LL旋转 左单旋
左子树的右边进行LR旋转 调整abc至cba
右子树的左边进行RL旋转 调整abc至cab

比较两颗二叉搜索树？
结点个数 2个序列
分别建两颗搜索树     或者     比较小数序列和大数序列        或者      建一棵树判断序列是否一致
如果每次搜索经过结点全面都出现过则一致    否则不一致（遇到前面未出现过的结点）

逆转链表？  给单链表头结点 整数k 每k个结点逆转一下 返回给用户头结点指针
什么是链表  抽象   有块地方存数据  有块地方存指针 下一个结点的地址
增加一个空结点
测试数据  有尾巴不反转 地址取到上下界  正好全反转  k=N全反转  k=1不用反转   最大/最小N   有多余结点
【边界测试】

堆
优先队列 特殊队列 取出元素顺序按元素优先权 而不是元素进入先后顺序？
数组  插入 总是插入尾部o1   删除 查找最大关键字on 从数组中删除需要移动元素on
链表  插入 总是插入头部o1   删除 查找最大/最小关键字on  删去结点o1
有序数组   插入 找到合适位置on/olog2n  移动元素插入on      删除 删去最后一个元素o1
有序链表   插入 找到合适位置on  插入元素o1      删除  删除首元素/最后元素o1

如果采用二叉树结构 应更关注删除    结点顺序 树结构 完全二叉树
堆： 结构性 数组表示完全二叉树     有序性 任意结点关键字是子树所有结点最大值   最大堆 大顶堆 最大值      最小堆 小顶堆 最小值
类型名称   堆    数据对象集 完全二叉树 每个结点元素值不小于子结点元素值      操作集 create isfull  insert  isempty   deletemax返回最大值

最大堆  
插入 复杂度ologn
删除 取出根结点 同时删除堆的一个结点  复杂度ologn
建立 堆排序        存放在一维数组中    通过插入操作将n个元素一个个相继插入到初始为空的堆中 时间复杂度onlogn         
                          在线性时间复杂度下建立最大堆  将n个元素按输入顺序存入 满足完全二叉树  调整结点位置以满足最大堆有序特性

哈夫曼树 哈夫曼编码
将百分制考试成绩转化成五分制   不同方法构造搜索树
带权路径长度WPL   二叉树有n个叶子结点  每个叶子结点带权值wk 从根结点到每个叶子结点长度为lk 则每个叶子结点带权路径长度和为 wl求和
最优二叉树/哈夫曼树  WPL最小的二叉树
把权值排序 每次把权值最小的两颗二叉树合并
堆   /    排序
利用最小堆 时间复杂度onlogn
特点 没有度为1的结点   n个叶子结点哈夫曼树共有 2n-1个结点  哈夫曼树任意非叶子结点的左右子树交换后仍是哈夫曼树
同一组权值存在不同构的哈夫曼树 最优化值相同

存储空间最少  不等长编码  
避免二义性   前缀码 任何字符编码都不是另一字符编码的前缀
所有结点都在叶节点上 就不会出现前缀    左边0 右边1

集合表示 交 并 补 差 判定是否属于
并查集 集合并、查某元素属于什么集合
并查集 树结构表示 树的每个结点代表一个集合元素    已知一个父亲找儿子
双亲表示法 孩子指向双亲  可以链表
数组存储形式
查找操作 根结点表示    
并运算   根结点 一个根结点父结点指针设置成另一个根结点数组下标
为了效率 采用小的集合并到相对大的集合中   负数的绝对值代表元素个数

堆中的路径？ 将一系列给定数字插入初始为空的小顶堆H，随后给任意下标答应从hi到根结点路径
堆的表示 操作    用数组表示
创建时设置岗哨 用以判别

filetransfer 给定计算机 连网线 任何两个给定计算机是否联网  并查集应用
集合简化表示  任何有限集合n个元素都可以一一映射为整数0---n-1
直接定义成整型数组，不要数据域
TSSN实现   连通集  too simple sometime naive
union一直进行会导致树越来越高   比树高 把矮树贴到高树上  另一种做法 比规模 -元素个数
需要按秩归并 对union改进    两种都是按秩归并   最坏情况树高 ologn   时间复杂度nlogn

路径压缩  伪递归直接转换成循环
交错执行带路径压缩的查找和按秩归并的时间复杂度
Ackermann函数  非常快非常大
log*n<=4  ackermann函数反函数 对n求对数直到结果<=1次数
在要查找的次数前乘常数还是logn   做路径压缩要更快 当n充分大时
