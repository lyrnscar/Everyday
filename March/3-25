图
六度空间理论
最短路径问题  最小生成树
多对多关系 包含了线性表和树
一组顶点 v表示   一组边 e表示 有向边<>  无向边()
类型名  图    数据对象集  非空有限顶点集合v和有限边集合e    操作集  create  insertvertex  insertedge   dfs深度优先    bfs宽度优先   shortestpath最短距离   mst最小生成树
带权重的图 网络
怎么在程序中表示图   邻接矩阵   省一半空间  一维数组n(n+1)/2
直观简单好理解  方便找所有邻结点  是否存在边    顶点度 有向图行出度 列入度
稀疏图      浪费空间  对稠密图核算   浪费时间  

邻接表 指针数组 对应矩阵每行一个链表 只存非零元素      一定要够稀疏才合算
方便找所有邻接点  节约稀疏图空间   方便计算无向图的度 有向图智能计算出度  逆邻接表计算入度     不方便检查任意一对顶点间是否存在边

图的遍历
DFS深度优先搜索   类似于树的先序遍历    时间复杂度无法确定  如果用邻接表存储 o(n+e)   邻接矩阵 o(n^2)
BFS广度优先搜索   类似树的层序遍历    时间复杂度与DFS一样
两种遍历各有特点   不同问题的特点不同
图不连通   存在路径则称连通    路径 图中的边  路径中的长度是路径的边数 所有顶点都不同则称简单路径       回路  起点等于终点
连通图 任意两点均连通      连通分量 无向图极大连通子图 顶点数极大 边数极大所有顶点相连的所有边
强连通 存在双向路径     强连通图 任意两顶点均强连通      强连通分量 有向图极大强连通子图
图的结点 图的边

六度空间  对每个结点进行广度优先   搜索过程中累计访问结点数   需要记录层数 仅计算6层内结点数
如何建立图    用邻接矩阵表示图  /邻接表        初始化顶点没边图   加入边

树travelsalagain   非递归中序遍历   push顺序为先序遍历  pop中序遍历
完全二叉搜索树    树的表示法  链表vs数组     需要的操作 填写数字（遍历）  层序遍历     完全二叉树不浪费空间 层序遍历==直接顺序输出    首先要排序 stdlib库里  qsort
霍夫曼编码  不唯一      最优编码 总长度WPL最小      无歧义解码 前缀码 数据仅存于叶子结点     没有度为1的结点

最短路径问题
单源最短路  有权/无权  多源最短路
无向图单源最短路算法  按照递增的顺序找出到各个顶点的最短路   unweighted 时间复杂度 o(v+e)    dist  path
有权图单源最短路算法  按照递增顺序找出   Dijkstra算法 s   贪心算法     不能解决有负边情况     时间复杂度  直接扫描所有未收录顶点o(|v|)    o(|v|^2+|e|)  对稠密图效果好    将dist存在最小堆中o(log|v|)   o(|e|log|v|)  对稀疏图效果好
多源最短路   调用多遍单元最短路 o(v^3+e*v) 对稀疏图效果好        floyd算法 o(v^3)   邻接矩阵记录稠密图  

最小生成树
minimum spanning tree   无回路  v个顶点v-1条边  生成树包含全部顶点 v-1条边都在图里      边的权重和最小      图连通
贪心算法  每步都要最好  权重最小的边    需要约束 只能用图里有的边 正好用掉v-1条边 不能有回路
prim算法 让一棵小树长大   收录的是顶点   类似dijkstra  o(v^2)  稠密图合算
kruskal算法  将森林合并成树  收录的是边    最小堆判断权重最小边   并查集判断回路    o(eloge)

拓扑排序  AOV网络
拓扑序 如果图中有有向路径你 v在w前 顶点序列  有向无环图 DAG   容器 入度为0的顶点放到容器  可以检测有向无环图
关键路径问题  AOE 网络   用于安排项目工序    
