排序
简单排序  算法效率  整数排序 从小到大  n是正整数 只讨论基于比较的排序 只讨论内部排序  稳定性 任意两个相等数据排序前后相对位置不发生改变  没有一种排序在任何情况下表现最好
冒泡排序  最大的放到最下面  加标记 标识未交换则表明序列有序  最好on  最坏on^2      单向链表  稳定
插入排序  摸牌 从最后向前比 如果小 则错位 移出空位  新牌落位   最好on  最坏on^2      稳定
如果序列基本有序 则插入排序简单高效     任何n个不同元素的序列平均有n(n-1)/4个逆序对   仅以交换相邻两个元素排序的算法平均时间复杂度为on^2    
提高效率 每次消不止一个逆序对，每次消距离较远的逆序对

希尔排序 利用插入排序   5间隔排序  3间隔排序  1间隔排序   Dk间隔有序执行Dk-1间隔排序后Dk间隔仍然有序
原始希尔排序 D=[n/2]     Dk=[Dk+1/2]     最坏情况θn^2         增量元素不互质 小增量有可能不起作用
hibbard增量序列    sedgewick增量序列

堆排序
选择排序  时间复杂度 θn^2
堆排序      最小堆    时间复杂度onlogn  额外需要on空间 复制元素需要时间         最大堆  

归并排序  两个有序子列归并  归并时间复杂度on  
递归算法   分而治之  稳定  onlogn    统一函数接口
非递归算法   额外空间复杂度on      稳定   需要额外空间 来回复制元素 基本不用与内排序 用于外排序

快速排序  细节   分而治之   中枢pivot  分开   递归治理  合并  最好情况每次正好中分 onlogn
选主元  只选第一个就是on^2      随机取不便宜   取头 中 尾中位数   
小规模数据处理  用递归占用空间    小规模数据可能还不如插入排序
程序中定义cutoff阈值 调用简单排序解决问题

表排序
频繁交换 大的数据移动   间接排序  排序排的是位置 不是数据   定义一个指针数组作为表  仅按顺序输出则输出地址下标
如果需要物理排序  n个数字排列由若干独立环组成    复杂度分析 om*n

基数排序    稳定
桶排序  建立n个链表（桶）  成绩排序     时间复杂度 om+n    
整数值0-999之间  次位优先  从后位向前  oP(n+b)    如果桶的个数小则接近线性复杂度
用于多关键字排序  扑克牌   主位优先      次位优先  合并结果

散列查找
哈希表 散列表    动态查找
顺序查找on   二分查找（静态）olog2n   二叉搜索树oh  平衡二叉树olog2n   快速找到关键词 查找本质是找到对象栈位置  有序安排对象 全序 半序  直接算出对象位置 散列
计算位置 构造散列函数确定关键词位置    解决冲突 多个关键词位置相同  复杂度wei常数  
类型名称   符号表     数据对象集  名字-属性对集合      操作集  initializetable  isin   find   modefy    insert    delete
求余    装填因子  格子占用比   哈希函数
如果没有一处  查询 插入 删除 o1
散列基本思想  以关键字key为自变量 通过确定函数h 计算出对应函数值h(key)作为存储地址   如果有冲突需要策略处理

计算简单  关键字对应地址空间分布均匀      
直接定址法 线性函数实现
除留余数法 key mod p   p一般取素数
数字分析法 取随机位作为散列地址   11位手机号取后四位  atoi将字符串转化为整数
折叠法        把关键字分割成位数相同的几个部分
平方取中法 
 
字符关键字
简单的散列函数 ASCII码  
改进  前三个字符移位法    冲突 空间浪费
好的散列函数  移位法

冲突处理方法
换个位置 开放地址法    同一位置冲突对象组织在一起 链地址法
按某种规则寻找下一个位置  加上di    线性探测  平方探测  双散列
线性探测法  增量序列 1234      成功平均查找长度 加一平均     不成功平均查找长度 找空的次数取平均（根据余数分类计算）
平方探测发  二次探测  +-平方   不是只要有空间就能找到    避免聚集  线性探测较严重   长度是4k+3的素数可以探测整个空间
懒惰删除
双散列探测
再散列  当散列表中元素太多查找效率会下降 0.5-0.85  扩大散列表再填充原来元素
分离链接法 冲突所有关键词存储在同一个单链表中

性能分析 
散列函数是否均匀  处理冲突方法  装填因子对效率影响
选择合适的h(key)  散列法效率期望是常数  几乎与空间无关 适合关键字直接比较计算量大的问题    字符串管理       以较小的α为前提 以空间换时间      存储对关键字随机不便于顺序查找 范围查找 最大最小值查找
开放地址法  散列表是数组 存储效率高 随即查找  散列表有聚集现象
分离链法 顺序和链式结合 效率存储/查找都较低      关键字删除不需要懒惰删除 没有存储垃圾     太小的α空间浪费 太大时间代价 不均匀链表长度导致时间效率严重下降
应用 词频统计  电话统计

插入排序 前面有序后面没变化   归并排序 分段排序
n个数字排列
逆问题 线性探测解决冲突    散列映射-拓扑排序

串的模式匹配 KMP算法
串 线性存储的一组数据 默认字符     特殊操作集 串长  相等  相接  求子串  插入子串  匹配子串  删除子串
改进一从末尾开始比较    改进二KMP算法 o(n+m)    真子串  match方法找pattern子串
